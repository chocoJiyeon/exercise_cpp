#include<bits/stdc++.h>
using namespace std;

int N,h,ret,H,maxx;
int a[100][100],visited[100][100];
int dy[] = {-1,0,1,0};
int dx[] = {0,1,0,-1};

void DFS(int y, int x)
{
	visited[y][x] = 1;
	for(int i=0; i<4; i++)
	{
		int ny = y + dy[i];
		int nx = x + dx[i];
		if(ny<0|| nx<0|| ny>=N|| nx>=N) continue;
		if(!visited[ny][nx] && a[ny][nx]>H)
			DFS(ny,nx);
	}
	return;
}

int main()
{
	cin>>N;
	for(int i=0; i<N; i++)
	{
		for(int j=0; j<N; j++)
		{
			cin>>h;
			a[i][j]=h;
		}
	}
	for(H=0; H<=100; H++)
	{
		fill(&visited[0][0], &visited[0][0]+100*100, 0);
		ret = 0;
		for(int i=0; i<N; i++)
		{
			for(int j=0; j<N; j++)
			{
				if(a[i][j]>H && !visited[i][j])
				{
					DFS(i,j);
					ret++;
				}
			}
		}
		if(maxx < ret) maxx = ret;
	}
	cout<<maxx;
}
